% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PM_cov.R
\name{plot.PM_cov}
\alias{plot.PM_cov}
\title{Plot Pmetrics Covariate objects}
\usage{
\method{plot}{PM_cov}(
  x,
  formula,
  line = list(lm = NULL, loess = NULL, ref = NULL),
  marker = TRUE,
  colors,
  icen = "median",
  include = NULL,
  exclude = NULL,
  legend,
  log = FALSE,
  grid = TRUE,
  xlab,
  ylab,
  title,
  stats = TRUE,
  xlim,
  ylim,
  print = TRUE,
  ...
)
}
\arguments{
\item{x}{The name of an \link{PM_cov} data object
and loaded with \link{PM_load} as a \link{PM_result}, e.g. \code{PM_result$cov}.}

\item{formula}{This is a mandatory formula of the form \code{y ~ x}, where \code{y} and \code{x}
are the two \code{data} parameters to plot.}

\item{line}{Controls characteristics of lines. Unlike
some other Pmetrics plots, but like \link{plot.PM_op}, \code{line} is a list of
three elements:
\itemize{
\item \code{lm}  If set to \code{TRUE} or a list of plotly line attributes,
will generate a linear regression of the form y ~ x
Line attributes will control the appearance of the regression
line and the confidence interval around the line. If set to
\code{FALSE}, no linear regression will be generated. The default
values for the elements of the \code{lm} list, all of which can be
overriden are:
\itemize{
\item \code{ci} Confidence interval around the regression, default 0.95.
\item \code{color} Color of the regression line and the confidence area around
the line, but at opacity = 0.2. Default is "dodgerblue".
\item \code{width }Width of the regression line, default 1.
\item \code{dash} See \code{plotly::schema()}, traces > scatter > attributes >
line > dash > values. Default is "solid".
Example: \code{line = list(lm = list(color = "red", dash = "longdash", width = 2))}
}
\item \code{loess} If set to \code{TRUE} or a list of plotly line attributes,
will generate a loess regression of the form y ~ x
The list elements and default values in the \code{loess} list are the
same as for \code{lm} except the default style is "dash".
Example: \code{line = list(lm = FALSE, loess = TRUE)}
\item \code{ref} If set to \code{TRUE} or a list of plotly line attributes,
will generate a reference line with slope = 1 and intercept = 0.
The default values for the elements of the \code{ref} list are:
\itemize{
\item \code{color} "grey".
\item \code{width} 1.
\item \code{dash} "dot".
Note that there is no \emph{ci} argument for the \emph{ref} list.
Example: \code{line = list(lm = FALSE, loess = TRUE, ref = list(color = "lightgrey"))}
If the \code{line} argument is missing, it will be set to
\code{line = list(lm = FALSE, loess = TRUE, ref = FALSE)}, i.e. there will be a linear
regression with reference line, but no loess regression.
If \emph{time} is chosen as the x variable in the formula, linear, loess and reference
lines will be suppressed, although formatting specified in the loess line (except color,
see below) will be applied to the lines joining the subject values.
}
}}

\item{marker}{\verb{r template("marker")} Default is
\code{marker = list(color = orange, shape = "circle", size = 10, opacity = 0.5, line = list(color = black, width = 1))}.}

\item{colors}{to use for subjects when \emph{time} is set as the x parameter.
This can be a palette or a vector of colors.
For accepted palette names see \code{RColorBrewer::brewer.pal.info}. Examples include
"BrBG", or "Set2". An example vector could be \code{c("red", "green", "blue")}. It is not
necessary to specify the same number of colors as groups within \code{color}, as colors
will be interpolated to generate the correct number. The default
is the "Spectral" palette. This will override any color in the \code{marker} or \code{line}.}

\item{icen}{\verb{r template("icen")}}

\item{include}{\verb{r template("include")}}

\item{exclude}{\verb{r template("exclude")}}

\item{legend}{Not used for this function.}

\item{log}{\verb{r template("log")}}

\item{grid}{\verb{r template("grid")}}

\item{xlab}{\verb{r template("xlab")}   If missing, will default to the name of the
x variable in the formula.}

\item{ylab}{\verb{r template("ylab")}   If missing, will default to the name of the
y variable in the formula.}

\item{title}{\verb{r template("title")} Default is to have no title.}

\item{stats}{Add the statistics from linear regression to the plot. If
\code{FALSE}, will be suppressed. Default is \code{TRUE} which results in default format of
\code{list(x= 0.8, y = 0.1, bold = F, font = list(color = "black", family = "Arial", size = 14))}.
The coordinates are relative to the plot with lower left = (0,0), upper right = (1,1). This
argument maps to \code{plotly::add_text()}.}

\item{xlim}{\verb{r template("xlim")}}

\item{ylim}{\verb{r template("ylim")}}

\item{print}{If \code{TRUE}, will print the plotly object and return it. If \code{FALSE}, will only return the plotly object.}

\item{\dots}{\verb{r template("dotsPlotly")}}
}
\value{
Plots the object.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}

Plot PMcov objects
}
\details{
This method will plot any two columns, specified using a formula, of a PMcov object, which contains covariate and Bayesian posterior parameter information
for each subject.  Specifiying any two variables that do not include time will result in a scatter plot with optional regression and reference lines.  If
time is included as the x variable, the y variable will be plotted vs. time, aggregated by subject.  This can be useful to see time varying parameters,
although a formula within formula approach may be required, e.g. \verb{$plot(I(cl_0*wt**0.75) ~ time)} in order to see the change in cl over time according to
the change in wt over time, even though cl_0 is constant for a given subject.
}
\examples{
#'
\dontrun{
NPex$cov$plot(V ~ wt)
NPex$cov$plot(Ke ~ wt, line = list(lm = TRUE, ref = FALSE, loess = FALSE))
NPex$cov$plot(Ke ~ wt, line = list(loess = list(ci = 0.9, color = "green")))
NPex$cov$plot(V ~ time, marker = list(color = "blue"))
NPex$cov$plot(V ~ wt,
  line = list(lm = TRUE, loess = FALSE),
  stats = list(x = 0.5, y = 0.2, font = list(size = 7, color = "blue"))
)
}
}
\seealso{
\link{PM_cov}, \link{PM_result}, \link[plotly:schema]{plotly::schema}

Other PMplots: 
\code{\link{plot.PM_cycle}()},
\code{\link{plot.PM_data}()},
\code{\link{plot.PM_final}()},
\code{\link{plot.PM_model}()},
\code{\link{plot.PM_op}()},
\code{\link{plot.PM_opt}()},
\code{\link{plot.PM_pop}()},
\code{\link{plot.PM_post}()},
\code{\link{plot.PM_pta}()},
\code{\link{plot.PM_sim}()},
\code{\link{plot.PM_valid}()}
}
\author{
Michael Neely
}
\concept{PMplots}
