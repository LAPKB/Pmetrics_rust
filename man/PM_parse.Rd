% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PM_parse.R
\name{PM_parse}
\alias{PM_parse}
\title{Parse Pmetrics output}
\usage{
PM_parse(path = ".", fit = "fit.rds", write = TRUE)
}
\arguments{
\item{fit}{The relative path to a "fit.rds" file.}

\item{write}{A logical value indicating if the results should be returned (\code{FALSE}, default) or written to disk (\code{TRUE})}

\item{wd}{The directory containing the output from the Rust-implementation of NPAG}
}
\value{
The output of \code{PM_parse} is a list containing the following elements
\itemize{
\item \strong{op} Written to the standard of \code{\link[=PM_op]{PM_op()}}
\item \strong{pop} Written to the standard of \code{\link[=PM_pop]{PM_pop()}}
\item \strong{post} Written to the standard of \code{\link[=PM_post]{PM_post()}}
\item \strong{cycles} Written to the standard of \code{\link[=PM_cycle]{PM_cycle()}}
\item \strong{final} Written to the standard of \code{\link[=PM_final]{PM_final()}}
\item \strong{cov} Written to the standard of \code{\link[=PM_cov]{PM_cov()}}
}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

A flexible parser for Pmetrics output
}
\details{
Currently written for the Rust implementation of NPAG
}
\author{
Michael Neely and Markus Hovd
}
