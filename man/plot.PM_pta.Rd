% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PM_pta.R
\name{plot.PM_pta}
\alias{plot.PM_pta}
\title{Plot PM_pta Percent Target Attainment objects}
\usage{
\method{plot}{PM_pta}(
  x,
  at = "intersect",
  include,
  exclude,
  type = "pta",
  mult = 1,
  outeq = 1,
  line = TRUE,
  marker = TRUE,
  ci = 0.9,
  legend = TRUE,
  log = FALSE,
  grid = TRUE,
  xlab,
  ylab,
  title,
  xlim,
  ylim,
  print = TRUE,
  ...
)
}
\arguments{
\item{x}{The name of an \emph{PM_pta} data object read by \link{makePTA}}

\item{at}{Which object in the \emph{PM_pta} result list to plot. By default "intersect" if
an intersection is present due to creation of the object with multiple target types, or
1 if no intersection is present, which means only 1 target type was selected. If
"intersect" is present in the object, the default can be overridden with a number to
plot one of the individual PTAs, e.g. \code{at = 2} to plot the second PTA rather than the
intersection of all the PTAs.}

\item{include}{\verb{r template("include")}}

\item{exclude}{\verb{r template("exclude")}}

\item{type}{Character vector controlling type of plot.
Default is "pta", which plots proportion with success on the y-axis and target on the x-axis.
The other choice is "pdi", which plots the median pdi (pharmacodynamic index), e.g. AUC/MIC, on the
y-axis, and target on the x-axis.}

\item{mult}{\verb{r template("mult")}}

\item{outeq}{\verb{r template("outeq")}}

\item{line}{Controls characteristics of lines.
This argument maps to the plotly line object.
It can be boolean or a list.
\code{TRUE} will plot the line with default characteristics for each simulated regimen.
\code{FALSE} will suppress line plotting.
If a list, it functions a little differently than other Pmetrics plotly functions.
Rather than controlling individual line characteristics, for this plot,
the \code{line} argument should be a list of the options for group based plotting,
where each group corresponds to a simulated regimen. The possible elements of the
\code{line} list should be exactly named:
\itemize{
\item color Maps to the \link[plotly:plot_ly]{plotly::plot_ly} \code{colors} argument to override default colors
applied to the lines for each regimen. This can be a named palette, which
can be obtained with \code{RColorBrewer::display.brewer.all()} or a vector of hexadecimal
color names. One way to ensure reliable color palettes is to use the
\href{https://colorbrewer2.org/#type=qualitative&scheme=Accent&n=6}{ColorBrewer} site.
Choosing the number of data classes to correspond to regimens, and qualitative data
results in a distinct palette. Easiest importing into R is to copy/paste the Export
of JavaScript on the ColorBrewer website. The default is "Set1". Palettes
with fewer colors than regimens will be recycled. A color can also be a character
vector of color names, recycled as needed. For example, a print-friendly choice
is \code{line = list(color = "black")}.
\item width Maps to the \link[plotly:plot_ly]{plotly::plot_ly} \code{width} argument to override default widths
applied to the lines for each regimen. All lines will have the same width.
The default value is 2.
\item dash Maps to the \link[plotly:plot_ly]{plotly::plot_ly} \code{linetypes} argument to override default styles
applied to the lines for each regimen. If numeric, will map to \code{lty} \link{par} values.
It can also be a character vector of dash names as listed in \link[plotly:plot_ly]{plotly::plot_ly}.
Example: \code{line = list(color = "Blues", width = 1, dash = 2)}, whicb will result
in dotted lines (dash  = 2) all with width 1 but in different shades of blue.
}}

\item{marker}{Controls the plotting symbol.
This argument maps to the plotly marker object.
It can be boolean or a list.
\code{TRUE} will plot the profiles with default characteristics for each simulated regimen.
\code{FALSE} will suppress line plotting.
If a list, it functions a little differently than other Pmetrics plotly functions.
Rather than controlling individual marker characteristics, for this plot,
the \code{marker} argument should be a list of the options for group based plotting,
where each group corresponds to a simulated regimen. The possible elements of the
\code{marker} list should be exactly named:
\itemize{
\item color Default marker color is the same as the line color. If line color is specified,
marker color does not need to also be specified. Even if line plotting is suppressed
with \code{line = F}, the default color value of "Set1" will be applied to markers,
unless specified, e.g. \code{marker = list(color = "Blues")}.
\item symbol Maps to the \link[plotly:plot_ly]{plotly::plot_ly} \code{symbols} argument to override default symbols
applied to the markers for each regimen. If only one value is supplied for this,
it will be recycled for each regimen, i.e. all will have the same symbol.
See \code{plotly::schema()}, traces > scatter > attributes > marker > symbol > values
for options.
\item size Maps to the \link[plotly:plot_ly]{plotly::plot_ly} \code{size} argument to override default size
applied to the markers for each regimen. All markers will have the same size.
The default value is 12.
}}

\item{ci}{Confidence interval around curves on \code{type = "pdi"} plot, on scale of 0 to 1. Default is 0.9.}

\item{legend}{\verb{r template("legend")} Default will be the labeled regimen names supplied during \link{makePTA},
or if missing, "Regimen 1, Regimen 2,...Regimen n", where \emph{n} is the number of
regimens in the PM_pta object.}

\item{log}{\verb{r template("log")}}

\item{grid}{\verb{r template("grid")}}

\item{xlab}{\verb{r template("xlab")}  Default is "Target" when targets are discrete,
and "Regimen" when targets are sampled.}

\item{ylab}{\verb{r template("ylab")}  Default is "Proportion with success" for
plot \code{type = "pta"} and "Pharmacodynamic Index" for plot \code{type = "pdi"}.}

\item{title}{\verb{r template("title")} Default is to have no title.}

\item{xlim}{\verb{r template("xlim")}}

\item{ylim}{\verb{r template("ylim")}}

\item{print}{If \code{TRUE}, will print the plotly object and return it. If \code{FALSE}, will only return the plotly object.}

\item{...}{\verb{r template("dotsPlotly")}}
}
\value{
Plots the object.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}

This function will plot the percent target attainment for associated with
simulations.
}
\details{
\link{PM_pta} objects are made with the \verb{$pta} method for \link{PM_sim}  or
with \code{PM_pta$new()}. Under the hood, either method uses the \link{makePTA} function.
}
\examples{
\dontrun{
pta1 <- simEx$pta(
  simlabels <- c("600 mg daily", "1200 mg daily", "300 mg bid", "600 mg bid"),
  targets = c(0.25, 0.5, 1, 2, 4, 8, 16, 32), target.type = "time",
  success = 0.6, start = 120, end = 144
)
pta1$summary()
pta1$plot()
}
}
\seealso{
\link{makePTA}

Other PMplots: 
\code{\link{plot.PM_cov}()},
\code{\link{plot.PM_cycle}()},
\code{\link{plot.PM_data}()},
\code{\link{plot.PM_final}()},
\code{\link{plot.PM_model}()},
\code{\link{plot.PM_op}()},
\code{\link{plot.PM_opt}()},
\code{\link{plot.PM_pop}()},
\code{\link{plot.PM_post}()},
\code{\link{plot.PM_sim}()},
\code{\link{plot.PM_valid}()}
}
\author{
Michael Neely
}
\concept{PMplots}
