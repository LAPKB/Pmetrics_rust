% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PM_model.R
\name{PM_model}
\alias{PM_model}
\title{Defines the PM_model class}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}

PM_model objects contain the variables, covariates, equations and error models
necessary to run a population analysis.
}
\details{
PM_model objects are one of two fundamental objects in Pmetrics, along with
\code{\link[=PM_data]{PM_data()}} objects. Defining a PM_model allows for fitting it to the data
via the \verb{$fit()} method to conduct a
population analysis, i.e. estimating the probability distribution of model equation
paramter values in the population. The PM_model object is created using the
\code{\link[=build_model]{build_model()}} function, by defining a list
directly in R, or by reading a model text file. See the vignette on models
for details.
}
\author{
Michael Neely
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{model_list}}{A list containing the model components built by translating
the original arguments into Rust}

\item{\code{arg_list}}{A list containing the original arguments passed to the model}

\item{\code{content}}{The full path and filename of the compiled model}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{model_list}}{A list containing the model components built by translating
the original arguments into Rust}

\item{\code{arg_list}}{A list containing the original arguments passed to the model}

\item{\code{content}}{The full path and filename of the compiled model}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PM_Vmodel-new}{\code{PM_model$new()}}
\item \href{#method-PM_Vmodel-fit}{\code{PM_model$fit()}}
\item \href{#method-PM_Vmodel-simulate_all}{\code{PM_model$simulate_all()}}
\item \href{#method-PM_Vmodel-parameters}{\code{PM_model$parameters()}}
\item \href{#method-PM_Vmodel-print}{\code{PM_model$print()}}
\item \href{#method-PM_Vmodel-update}{\code{PM_model$update()}}
\item \href{#method-PM_Vmodel-write}{\code{PM_model$save()}}
\item \href{#method-PM_Vmodel-plot}{\code{PM_model$plot()}}
\item \href{#method-PM_Vmodel-clone}{\code{PM_model$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PM_Vmodel-new"></a>}}
\if{latex}{\out{\hypertarget{method-PM_Vmodel-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PM_model$new(model, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PM_Vmodel-fit"></a>}}
\if{latex}{\out{\hypertarget{method-PM_Vmodel-fit}{}}}
\subsection{Method \code{fit()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PM_model$fit(
  data = NULL,
  run = NULL,
  include = NULL,
  exclude = NULL,
  cycles = 100,
  prior = "sobol",
  density0 = 0.01,
  seed = 23,
  overwrite = FALSE,
  algorithm = "NPAG",
  report = getPMoptions("report_template")
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PM_Vmodel-simulate_all"></a>}}
\if{latex}{\out{\hypertarget{method-PM_Vmodel-simulate_all}{}}}
\subsection{Method \code{simulate_all()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PM_model$simulate_all(data, theta)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PM_Vmodel-parameters"></a>}}
\if{latex}{\out{\hypertarget{method-PM_Vmodel-parameters}{}}}
\subsection{Method \code{parameters()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PM_model$parameters()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PM_Vmodel-print"></a>}}
\if{latex}{\out{\hypertarget{method-PM_Vmodel-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PM_model$print(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PM_Vmodel-update"></a>}}
\if{latex}{\out{\hypertarget{method-PM_Vmodel-update}{}}}
\subsection{Method \code{update()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PM_model$update(changes_list)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PM_Vmodel-write"></a>}}
\if{latex}{\out{\hypertarget{method-PM_Vmodel-write}{}}}
\subsection{Method \code{write()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PM_model$save(model_path = "genmodel.txt", engine = "npag")}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PM_Vmodel-plot"></a>}}
\if{latex}{\out{\hypertarget{method-PM_Vmodel-plot}{}}}
\subsection{Method \code{plot()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PM_model$plot(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PM_Vmodel-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PM_Vmodel-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PM_model$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
