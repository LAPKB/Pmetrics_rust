% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PM_data.R
\name{plot.PM_data}
\alias{plot.PM_data}
\title{Plot PM_data Time-Output Data}
\usage{
\method{plot}{PM_data}(
  x,
  include = NULL,
  exclude = NULL,
  line = list(join = TRUE, pred = FALSE),
  marker = TRUE,
  color = NULL,
  colors = "Set1",
  names = NULL,
  mult = 1,
  outeq = 1,
  block = 1,
  tad = FALSE,
  overlay = TRUE,
  legend,
  log = FALSE,
  grid = FALSE,
  xlab = "Time",
  ylab = "Output",
  title = "",
  xlim,
  ylim,
  ...
)
}
\arguments{
\item{x}{The name of an \code{PM_data} data object or loaded as a field
in a \link{PM_result} object}

\item{include}{\verb{r template("include")}}

\item{exclude}{\verb{r template("exclude")}}

\item{line}{Controls characteristics of lines as for all plotly plots.
Here  \code{line} is a list of two elements:
\itemize{
\item \code{join}  Can either be a boolean or a list. If set to \code{TRUE} or
a list of plotly line attributes, it
will generate line segments joining observations. If set to
\code{FALSE}, no segments will be generated. The default
values for the elements of the \code{join} list, all of which can be
overriden are:
\itemize{
\item \code{color} Color of the segments. Default is "dodgerblue".
\item \code{width }Width of the segments, default 1.
\item \code{dash} See \code{plotly::schema()}, traces > scatter > attributes >
line > dash > values. Default is "solid".
Example: \code{line = list(join = list(color = "red", dash = "longdash", width = 2))}
}
\item \code{pred} Default is \code{FALSE}, which means that predictions will not be included
in the plot. To include predictions, supply one of the following:
\item If plotting data contained in a \link{PM_result}, use "pop" or "post" to include population or posterior predictions.
** Example 1: \verb{run1 <- PM_load(1); run1$data$plot(line = list(pred = "post"))}
\item If plotting data not contained in a \link{PM_result}, you may add the
name of a population \link{PM_pop} or posterior \link{PM_post} prediction object in a \link{PM_result} object. This might be useful if you want to see how the predictions from one population match the raw data from another.
** Example 2: \verb{dat <- PM_data$new("new.csv"); dat$plot(line = list(pred = run1$post))}.
}

To format the predictions, supply \code{pred} as
a list, with the prediction object first, followed by named options to control the
prediction plot:
\itemize{
\item icen Chooses the median or mean of each
subject's Bayesian posterior parameter distribution.  Default is "median",
but could be "mean".
\item Other parameters to pass to plotly to control line characteristics that join
the predictions, including \code{color}, \code{width}, and \code{dash}.
Continuing Example 1 above: \code{pred = list("post", icen = "mean", color = "red", width = 2)}.
Default formats are the same as for the \code{join} argument, since normally one would not plot
both lines joining observations and prediction lines, i.e., typical use would be
\code{line = list(join = F, pred = "post")}.
}}

\item{marker}{Formats the symbols plotting observations. \verb{r template("marker")}}

\item{color}{Character vector naming a column in \code{x} to \strong{group} by, e.g. "id" or
a covariate like "gender"}

\item{colors}{to use for \strong{groups}. This can be a palette or a vector of colors.
For accepted palette names see \code{RColorBrewer::brewer.pal.info}. Examples include
"BrBG", or "Set2". An example vector could be \code{c("red", "green", "blue")}. It is not
necessary to specify the same number of colors as groups within \code{color}, as colors
will be interpolated to generate the correct number. The default when \code{color}
is specified is the "Set1" palette.}

\item{names}{A character vector of names to label the \strong{groups} if \code{legend = T}.
This vector does need to be the same length as the number of groups within \code{color}.
Example: \code{c("Male", "Female")} if \code{color = "gender"} and "gender" is a covariate
in the data.}

\item{mult}{\verb{r template("mult")}}

\item{outeq}{\verb{r template("outeq")} Default is 1, but can be multiple if present in the data, e.g. \code{1:2} or \code{c(1, 3)}.}

\item{block}{\verb{r template("block")} Default is 1, but can be multiple if present in the data, as for \code{outeq}.}

\item{tad}{\verb{r template("tad")}}

\item{overlay}{Operator to overlay all time concentration profiles in a single plot.
The default is \code{TRUE}. If \code{FALSE}, will trellisplot subjects one at a time. Can also be
specified as a vector with number of rows and columns, e.g. \code{c(3, 2)} for 3 rows and
2 columns of subject splots to include in each trellis.}

\item{legend}{\verb{r template("legend")} Default is \code{FALSE} unless groups are specified with \code{color}above.}

\item{log}{\verb{r template("log")}}

\item{grid}{\verb{r template("grid")}}

\item{xlab}{\verb{r template("xlab")} Default is "Time".}

\item{ylab}{\verb{r template("ylab")} Default is "Output".}

\item{title}{\verb{r template("title")} Default is to have no title.}

\item{xlim}{\verb{r template("xlim")}}

\item{ylim}{\verb{r template("ylim")}}

\item{\dots}{\verb{r template("dotsPlotly")}}
}
\value{
Plots the object.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}

Plots \emph{PM_data} objects
}
\details{
This function will plot raw and fitted time and concentration data with a variety of options.
By default markers are included and  have the following plotly properties:
\code{list(symbol = "circle", color = "red", size = 10, opacity = 0.5, line = list(color = "black", width = 1))}.
Markers can be joined by lines, default is \code{FALSE}. If chosen to be \code{TRUE},
the joining lines will have the following properties:
\verb{list(color = "dodgerblue", width = 1, dash = "solid"}.
The grid and legend are omitted by default.
}
\examples{
\dontrun{
# basic spaghetti plot
dataEx$plot()
# format line and marker
dataEx$plot(
  marker = list(color = "blue", symbol = "square", size = 12, opacity = 0.4),
  line = list(join = list(color = "orange"))
)
# include predictions with default format and suppress joining lines
dataEx$plot(
  line = list(join = FALSE, pred = NPex$post),
  xlim = c(119, 146)
)
# customize prediction lines
dataEx$plot(
  line = list(
    pred = list(NPex$post, color = "slategrey", dash = "dash"),
    join = FALSE
  )
)
}
}
\seealso{
\link{PM_data}, \link{PM_result}

Other PMplots: 
\code{\link{plot.PM_cov}()},
\code{\link{plot.PM_cycle}()},
\code{\link{plot.PM_final}()},
\code{\link{plot.PM_model}()},
\code{\link{plot.PM_op}()},
\code{\link{plot.PM_opt}()},
\code{\link{plot.PM_pop}()},
\code{\link{plot.PM_post}()},
\code{\link{plot.PM_pta}()},
\code{\link{plot.PM_sim}()},
\code{\link{plot.PM_valid}()}
}
\author{
Michael Neely
}
\concept{PMplots}
